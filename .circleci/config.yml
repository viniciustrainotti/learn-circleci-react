---
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.1.0

executors:
  default:
    resource_class: large
    environment:
      NODE_OPTIONS: --max_old_space_size=8192
    docker:
      - image: cimg/node:17.7.2
    working_directory: ~/workspace

references:
  restore_dependencies_cache: &restore_dependencies_cache
    restore_cache:
      keys:
        - dependencies-{{ checksum "package_cache.json" }}
        - dependencies-

  restore_source_cache: &restore_source_cache
    restore_cache:
      keys:
        - source-{{ .Branch }}-{{ .Revision }}
        - source-{{ .Branch }}-

  generate_dependencies_cache_checksum: &generate_dependencies_cache_checksum
    run:
      name: Dependencies cache checksum
      command: |
        cat package-lock.json > package_cache.json

commands:
  restore-source-checksum-cache:
    description: "This command will restore the source code from cache"
    steps:
      - *restore_source_cache
      - run: git checkout -- .
      - *generate_dependencies_cache_checksum
      - *restore_dependencies_cache

jobs:
  bootstrap:
    executor: default
    steps:
      - checkout
      - run: git gc
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - '.git'
      - run: git checkout -- .
      - *generate_dependencies_cache_checksum
      - *restore_dependencies_cache

      - run:
          name: Bootstrap
          command: |
            npm ci

      - save_cache:
          key: dependencies-{{ checksum "package_cache.json" }}
          paths:
            - 'node_modules'

  code-lint:
    executor: default
    steps:
      - restore-source-checksum-cache
      - run:
          name: Lint
          command: npm run lint

  unit-test:
    executor: default
    description: "This command will run the unit tests"
    steps:
      - restore-source-checksum-cache
      - run:
          name: Run tests
          command: npm run test

  build:
    executor: default
    environment:
      CI: false
    steps:
      - restore-source-checksum-cache
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .

  update-aws:
    docker:
      - image: 'cimg/python:3.9.1'
    steps:
      - attach_workspace:
          at: .
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          command: |
            aws s3 sync build "s3://${AWS_BUCKET}/" --delete
            aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID} --paths "/*"

commit-workflow-filters: &commit-workflow-filters
  branches:
    only:
      - /feature\/.*/
      - develop
      - master
release-workflow-filters: &release-workflow-filters
  branches:
    only:
      - /release\/.*/

workflows:
  version: 2
  commit-workflow:
    jobs:
      - bootstrap:
          filters: *commit-workflow-filters
      - code-lint:
          context: SonarCloud
          requires:
            - bootstrap
          filters: *commit-workflow-filters
      - unit-test:
          context: SonarCloud
          name: unit-test
          requires:
            - bootstrap
          filters: *commit-workflow-filters
      - build:
          context: SonarCloud
          requires:
            - unit-test
            - code-lint
          filters: *commit-workflow-filters

  release-workflow:
    jobs:
      - bootstrap:
          filters: *release-workflow-filters
      - code-lint:
          context: SonarCloud
          requires:
            - bootstrap
          filters: *release-workflow-filters
      - unit-test:
          context: SonarCloud
          name: unit-test
          requires:
            - bootstrap
          filters: *release-workflow-filters
      - build:
          context: SonarCloud
          requires:
            - unit-test
            - code-lint
          filters: *release-workflow-filters
      - update-aws:
          context: SonarCloud
          requires:
            - build
          filters: *release-workflow-filters